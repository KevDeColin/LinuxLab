#include "cannyDraw.h"
#include<opencv2/imgproc/types_c.h>

CannyDraw::CannyDraw() {

}

//??Video????Canny
void CannyDraw::convertVideoToCanny(string videoPath, string outPath,int precise) {
    //??????????
    VideoCapture capture(videoPath);
    //isOpen?§Ø???????????
    if (!capture.isOpened()) {
        std::cout << "Movie open Error" << endl;
    }
    //???????????
    double rate = capture.get(CAP_PROP_FPS);
    std:: cout << "fps:" << " " << rate << endl;
    //????????
    double total_rate = (int)capture.get(CAP_PROP_FRAME_COUNT);
    std:: cout << "framesCount:" << " " << total_rate << endl;
    //?????????
    int delay = 1000 / rate;
    bool stop = false;
    Mat frame;
    //??????
    cv::namedWindow("Canny Draw Video Player");
    capture >> frame;
    //???§Õ??????writer
    VideoWriter writer(outPath,VideoWriter::fourcc('M','J','P','G'),rate, Size(frame.cols, frame.rows), false);
    while (!stop) {
        //???????????
        if (!capture.read(frame)) {
            break;
        }
        //canny??????
        Mat canny_after=CannyDraw::convertMatToCanny(frame);
        //?????????????????
        if (precise == 0) {
            CannyDraw::convertHighToLowVideo(canny_after);
        }
        //?????????????writer
        writer << canny_after;
        //????????
        imshow("Canny Draw Video Player", canny_after);
        //??????
        char c=waitKey(delay);
        //?§Ø???????esc??????????
        if (c == 27) {
            break;
        }
    }
    //????????????
    capture.release();
    cv::destroyWindow("Canny Draw Video Player");
}

//??????????Canny
Mat CannyDraw::convertMatToCanny(Mat image) {
    //??????
    if (image.empty())
    {
        std::cout << "check the frame of video" << endl;
    }
    //??????????
    Mat image_gray,canny_after;
    if (image.channels() == 3) {
        cvtColor(image, image_gray, COLOR_BGR2GRAY);
    }
    //Canny???????????image_gray,???canny_after??????¦¶??150-255
    Canny(image_gray, canny_after, 150, 255);
    return canny_after;
}
bool CannyDraw::convertImageToCanny(string imagePath, string outPath,int precise) {
    Mat image = imread(imagePath);
    //??????
    if (image.empty())
    {
        std:: cout << "check the frame of video" << endl;
        return false;
    }
    //??????????
    Mat image_gray, canny_after,LowPrecise;
    if (image.channels() == 3) {
        cvtColor(image, image_gray, COLOR_BGR2GRAY);
    }
    //Canny???????????image_gray,???canny_after??????¦¶??150-255
    Canny(image_gray, canny_after, 150, 255);
    if (precise == 0) {
        //??????????????¨²???
        CannyDraw::convertHighToLowVideo(canny_after);
    }
    //§Õ?????¡¤??
    imwrite(outPath, canny_after);
    return true;
}
void CannyDraw::convertHighToLowVideo(Mat& image) {
    //getStructuringElement????????????§³???????????????????????????
    //??????5x5???¦Í?
    Mat element=getStructuringElement(MORPH_RECT,Size(5,5));
    //morphologyEx????????????????image????image????????DILATE????????????element
    //????5x5?????¦Ì???
    morphologyEx(image, image, MORPH_DILATE, element);
}
